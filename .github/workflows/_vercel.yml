name: Vercel Deployments

on:
  workflow_call:
    inputs:
      service:
        description: 'The service/app to deploy'
        type: string
        required: true
      target-env:
        description: 'The target environment (staging/production)'
        type: string
        required: true
      is_forked:
        description: 'That PR is a fork (or not)'
        type: string
        required: false
        default: 'false'
      bypass_diff_check:
        description: 'Bypass the monorepo diff check'
        required: false
        type: string
    secrets:
      # all vercel deployments
      NEXT_PUBLIC_STRIPE_KEY:
        required: false
      NEXT_PUBLIC_ETHPASS_KEY:
        required: false
      OP_SERVICE_ACCOUNT_TOKEN:
        required: true

jobs:
  check-changes:
    runs-on: ubuntu-22.04
    outputs:
      changed: ${{ steps.check_changes.outputs.changed }}
    steps:
      - name: 'Free up disk space'
        run: sudo rm -rf /usr/share/dotnet && sudo rm -rf /opt/ghc && sudo rm -rf "/usr/local/share/boost" && sudo rm -rf "$AGENT_TOOLSDIRECTORY"
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Check for changes in ${{ inputs.service }}
        run: |
          if  [ -z "${{ inputs.bypass_diff_check }}" ]; then
            changed=$(scripts/monorepo.sh ${{ inputs.service }} ${{ github.ref_name }})
          else 
            changed="changed"
          fi
          echo $changed
          echo "::set-output name=changed::$changed"
        shell: bash
        id: check_changes

  deploy-vercel:
    if: ${{ needs.check-changes.outputs.changed == 'changed' }}
    name: Deploy ${{ inputs.service }} on Vercel ${{ inputs.target-env }}
    runs-on: ubuntu-22.04
    needs: check-changes
    env:
      DOCKER_BUILDKIT: 1
      BUILDKIT_PROGRESS: plain
    steps:
      - uses: actions/checkout@v3
      - name: Load secrets from 1Password
        uses: 1Password/load-secrets-action@v1.3.1
        with:
          export-env: true
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          VERCEL_PROJECT_ID: op://secrets/vercel/project-id
          VERCEL_ORG_ID: op://secrets/vercel/org-id
          VERCEL_TOKEN: op://secrets/vercel/deployment-token
      - name: Deploy to Vercel
        run: |
          # show args
          echo "${{ inputs.target-env }} ${{ inputs.service }} vercel (project-id: $VERCEL_PROJECT_ID) $GITHUB_SHA $GITHUB_REF_NAME ${{ inputs.is_forked  }}"
          # run command
          scripts/deploy.sh ${{ inputs.target-env }} ${{ inputs.service }} vercel "$GITHUB_SHA" "$GITHUB_REF_NAME" ${{ inputs.is_forked  }}
